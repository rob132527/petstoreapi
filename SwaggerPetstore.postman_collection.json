{
	"info": {
		"_postman_id": "ce28e61c-14b7-4a80-bb21-4c3e4c5ef470",
		"name": "SwaggerPetstore",
		"description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n\nContact Support:\n Email: apiteam@swagger.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "2847045"
	},
	"item": [
		{
			"name": "pet",
			"item": [
				{
					"name": "{petId}",
					"item": [
						{
							"name": "create",
							"item": [
								{
									"name": "Add a new pet to the store",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//assertion to check the response status\r",
													"pm.test(\"Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//assertion to check the response message created the correct pet ID\r",
													"pm.test(\"Response shows the correct created pet ID\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.id).to.eql(10);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"ella\",\n  \"photoUrls\": [\n    \"https://keyassets.timeincuk.net/inspirewp/live/wp-content/uploads/sites/8/2021/02/GettyImages-997141470-e1614176377827.jpg\",\n    \"https://images7.alphacoders.com/350/350203.jpg\"\n  ],\n  \"id\": \"0010\",\n  \"category\": {\n    \"id\": \"010\",\n    \"name\": \"shitzu\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"011\",\n      \"name\": \"ella1\"\n    },\n    {\n      \"id\": \"012\",\n      \"name\": \"ella2\"\n    }\n  ],\n  \"status\": \"available\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/pet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet"
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "uploadImage",
							"item": [
								{
									"name": "uploads an image",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//assertion to check the response status\r",
													"pm.test(\"Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"// assertion to check if the response has file uploaded message\r",
													"pm.test(\"Body shows file was uploaded successfully\", function () {\r",
													"    pm.expect(pm.response.text()).to.include(\"File uploaded\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "additionalMetadata",
													"value": "test",
													"description": "Additional data to pass to server",
													"type": "text"
												},
												{
													"key": "file",
													"description": "file to upload",
													"type": "file",
													"src": "/C:/Users/Rbriones/Documents/PetstoreFiles/ella.jpg"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/pet/:petId/uploadImage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId",
												"uploadImage"
											],
											"query": [
												{
													"key": "file",
													"value": "",
													"disabled": true
												}
											],
											"variable": [
												{
													"key": "petId",
													"value": "10",
													"description": "(Required) ID of pet to update"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "additionalMetadata",
															"value": "<string>",
															"description": "Additional data to pass to server",
															"type": "text"
														},
														{
															"key": "file",
															"description": "file to upload",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/pet/:petId/uploadImage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId",
														"uploadImage"
													],
													"variable": [
														{
															"key": "petId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": \"<integer>\",\n  \"type\": \"<string>\",\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "update",
							"item": [
								{
									"name": "Update an existing pet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//assertion to check the response status\r",
													"pm.test(\"Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//assertion to check the response message updated the correct pet ID\r",
													"pm.test(\"Response shows the correct updated pet ID\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.id).to.eql(10);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"ella\",\n  \"photoUrls\": [\n    \"https://keyassets.timeincuk.net/inspirewp/live/wp-content/uploads/sites/8/2021/02/GettyImages-997141470-e1614176377827.jpg\",\n    \"https://images7.alphacoders.com/350/350203.jpg\"\n  ],\n  \"id\": \"0010\",\n  \"category\": {\n    \"id\": \"010\",\n    \"name\": \"shitzu\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"011\",\n      \"name\": \"ella1\"\n    },\n    {\n      \"id\": \"012\",\n      \"name\": \"ella2\"\n    }\n  ],\n  \"status\": \"available\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/pet",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet"
											]
										}
									},
									"response": [
										{
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/pet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Pet not found",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/pet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Validation exception",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/pet",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet"
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates a pet in the store with form data",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//assertion to check the response status\r",
													"pm.test(\"Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//assertion to check the response message updates the correct pet ID\r",
													"pm.test(\"Response shows the correct updated pet ID\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"10\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "bro",
													"description": "Updated name of the pet"
												},
												{
													"key": "status",
													"value": "not available",
													"description": "Updated status of the pet"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId",
													"value": "10",
													"description": "(Required) ID of pet that needs to be updated"
												}
											]
										}
									},
									"response": [
										{
											"name": "Invalid input",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "name",
															"value": "<string>",
															"description": "Updated name of the pet"
														},
														{
															"key": "status",
															"value": "<string>",
															"description": "Updated status of the pet"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/pet/:petId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId"
													],
													"variable": [
														{
															"key": "petId"
														}
													]
												}
											},
											"status": "Method Not Allowed",
											"code": 405,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "findByID",
							"item": [
								{
									"name": "Find pet by ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//assertion to check the response status\r",
													"pm.test(\"Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//assertion to check the response contains the correct pet ID\r",
													"pm.test(\"Response shows the correct pet ID\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.id).to.eql(10);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "apikey",
											"apikey": [
												{
													"key": "key",
													"value": "api_key",
													"type": "string"
												},
												{
													"key": "value",
													"value": "{{apiKey}}",
													"type": "string"
												},
												{
													"key": "in",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId",
													"value": "10",
													"description": "(Required) ID of pet to return"
												}
											]
										},
										"description": "Returns a single pet"
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "api_key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/:petId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId"
													],
													"variable": [
														{
															"key": "petId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"<string>\",\n  \"photoUrls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"id\": \"<long>\",\n  \"category\": {\n    \"id\": \"<long>\",\n    \"name\": \"<string>\"\n  },\n  \"tags\": [\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    }\n  ],\n  \"status\": \"available\"\n}"
										},
										{
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "api_key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/:petId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId"
													],
													"variable": [
														{
															"key": "petId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Pet not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "api_key",
														"value": "<API Key>",
														"description": "Added as a part of security scheme: apikey"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/:petId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId"
													],
													"variable": [
														{
															"key": "petId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "findByStatus",
							"item": [
								{
									"name": "Finds Pets by status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//assertion to check the response status\r",
													"pm.test(\"Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//assertion to check the response message shows the correct status\r",
													"pm.test(\"Response shows the correct status\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[1].status).to.eql(\"available\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"key": "status",
													"value": "available",
													"description": "(Required) Status values that need to be considered for filter"
												},
												{
													"key": "status",
													"value": "available",
													"description": "(Required) Status values that need to be considered for filter"
												}
											]
										},
										"description": "Multiple status values can be provided with comma separated strings"
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/findByStatus?status=available",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														"findByStatus"
													],
													"query": [
														{
															"key": "status",
															"value": "available",
															"description": "(Required) Status values that need to be considered for filter"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"pending\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"available\"\n  }\n]"
										},
										{
											"name": "Invalid status value",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/findByStatus?status=available",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														"findByStatus"
													],
													"query": [
														{
															"key": "status",
															"value": "available",
															"description": "(Required) Status values that need to be considered for filter"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "findByTags",
							"item": [
								{
									"name": "Finds Pets by tags",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//assertion to check the response status\r",
													"pm.test(\"Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//assertion to check the response message shows the correct tags\r",
													"pm.test(\"Response shows the correct tags\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData[0].tags[0].name).to.eql(\"string\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByTags?tags=string&tags=string",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByTags"
											],
											"query": [
												{
													"key": "tags",
													"value": "string",
													"description": "(Required) Tags to filter by"
												},
												{
													"key": "tags",
													"value": "string",
													"description": "(Required) Tags to filter by"
												}
											]
										},
										"description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/findByTags?tags=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														"findByTags"
													],
													"query": [
														{
															"key": "tags",
															"value": "<string>",
															"description": "(Required) Tags to filter by"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"pending\"\n  },\n  {\n    \"name\": \"<string>\",\n    \"photoUrls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"id\": \"<long>\",\n    \"category\": {\n      \"id\": \"<long>\",\n      \"name\": \"<string>\"\n    },\n    \"tags\": [\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<long>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"status\": \"available\"\n  }\n]"
										},
										{
											"name": "Invalid tag value",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/findByTags?tags=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														"findByTags"
													],
													"query": [
														{
															"key": "tags",
															"value": "<string>",
															"description": "(Required) Tags to filter by"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "delete",
							"item": [
								{
									"name": "Deletes a pet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//assertion to check the response status\r",
													"pm.test(\"Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//assertion to check the response message deleted the correct pet ID\r",
													"pm.test(\"Response shows the correct deleted pet ID\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"10\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "<string>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId",
													"value": "10",
													"description": "(Required) Pet id to delete"
												}
											]
										}
									},
									"response": [
										{
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "api_key",
														"value": "<string>"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/:petId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId"
													],
													"variable": [
														{
															"key": "petId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Pet not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "api_key",
														"value": "<string>"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/pet/:petId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId"
													],
													"variable": [
														{
															"key": "petId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "store",
			"item": [
				{
					"name": "inventory",
					"item": [
						{
							"name": "Returns pet inventories by status",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//assertion to check the response status\r",
											"pm.test(\"Response status is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"//assertion to check the response message shows the correct pet inventory\r",
											"pm.test(\"Response shows the correct pet inventory\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.available).not.equal(0);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/store/inventory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"inventory"
									]
								},
								"description": "Returns a map of status codes to quantities"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "api_key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/store/inventory",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"inventory"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"do_9\": \"<integer>\",\n  \"non_4\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "order",
					"item": [
						{
							"name": "{orderId}",
							"item": [
								{
									"name": "Place an order for a pet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//assertion to check the response status\r",
													"pm.test(\"Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//assertion to check the order placed for a pet is completed\r",
													"pm.test(\"Response shows the order placed for a pet is completed\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.complete).to.eql(true);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": \"020\",\n  \"petId\": \"10\",\n  \"quantity\": \"1\",\n  \"shipDate\": \" 2024-10-23T07:24:57.843Z\",\n  \"status\": \"approved\",\n  \"complete\": \"true\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/store/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"approved\",\n  \"complete\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/store/order",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"approved\",\n  \"complete\": \"<boolean>\"\n}"
										},
										{
											"name": "Invalid Order",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"approved\",\n  \"complete\": \"<boolean>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/store/order",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Find purchase order by ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//assertion to check the response status\r",
													"pm.test(\"Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//assertion to check if the purchased order ID is correct\r",
													"pm.test(\"Response shows the purchased order ID is correct\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.id).to.eql(20);\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/store/order/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId",
													"value": "20",
													"description": "(Required) ID of pet that needs to be fetched"
												}
											]
										},
										"description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"<long>\",\n  \"petId\": \"<long>\",\n  \"quantity\": \"<integer>\",\n  \"shipDate\": \"<dateTime>\",\n  \"status\": \"approved\",\n  \"complete\": \"<boolean>\"\n}"
										},
										{
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Order not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete purchase order by ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"//assertion to check the response status\r",
													"pm.test(\"Response status is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"//assertion to check if the deleted purchased order ID is successful\r",
													"pm.test(\"Response shows the deleted purchased order ID is successful\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.eql(\"20\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/store/order/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId",
													"value": "20",
													"description": "(Required) ID of the order that needs to be deleted"
												}
											]
										},
										"description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors"
									},
									"response": [
										{
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Order not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2"
		}
	]
}